[
{
  "obf_expr": "((- ((1 & not (1))) + (v4 * (v4 | (v4 & 1)))) | (v1 ^ v4))",
  "obf_leng": 18,
  "result_expr": "((v4 * v4) | (v1 ^ v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.24,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 ++ v3) /s 1) ^ (1 - v0))",
  "obf_leng": 10,
  "result_expr": "(v3 ^ (1 - v0))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.25,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 & not (v0)) | ((v0 ++ (v3 + (- (v4) * v4))) /s (1 & 1)))",
  "obf_leng": 18,
  "result_expr": "(v3 - (v4 * v4))",
  "result_leng": 6,
  "success": "yes",
  "time": 3.52,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((1 - (not (v4) | (v4 | not (v2)))) + (v3 * v4))",
  "obf_leng": 16,
  "result_expr": "(2 + (v3 * v4))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.06,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((1 - ((v2 * 1) - 1)) | v0)",
  "obf_leng": 11,
  "result_expr": "((2 - v2) | v0)",
  "result_leng": 6,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((((v3 + v3) | (v3 * v4)) - v1) + (1 + v1)) - 1)",
  "obf_leng": 17,
  "result_expr": "(((((2 * v3) | (v3 * v4)) - v1) + (1 + v1)) - 1)",
  "result_leng": 17,
  "success": "yes",
  "time": 2.48,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((1 + 1) ^ v4) + (v3 * v3))",
  "obf_leng": 9,
  "result_expr": "((2 ^ v4) + (v3 * v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.54,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- (v4) - ((v4 - - (v4)) + v4))",
  "obf_leng": 11,
  "result_expr": "- ((v4 + ((2 * v4) + v4)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.14,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v1 ++ v3) / 1) * v3) - ((1 + v2) + 1))",
  "obf_leng": 14,
  "result_expr": "((v3 * v3) - (v2 + 2))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.17,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((v3 * v3) | ((v3 + 1) + 1)) + not ((v3 | 1)))",
  "obf_leng": 15,
  "result_expr": "(((v3 * v3) | (v3 + 2)) + not ((v3 | 1)))",
  "result_leng": 13,
  "success": "yes",
  "time": 2.77,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v3 | (v0 & v0)) ^ (1 - (v3 - 1)))",
  "obf_leng": 13,
  "result_expr": "((v3 | v0) ^ (2 - v3))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.27,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((1 & (v1 & v0)) + (v0 & ((v1 ++ v1) /s v0))) & ((v1 ++ 1) / v1)) - (((1 ++ - (v1)) /s 1) + (- (v0) - ((v0 & v0) * - (v0)))))",
  "obf_leng": 38,
  "result_expr": "((((1 & (v1 & v0)) + (v0 & ((v1 ++ v1) /s v0))) & ((v1 ++ 1) / v1)) + ((v0 - (v0 * v0)) + v1))",
  "result_leng": 28,
  "success": "yes",
  "time": 0.22,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- (((v0 - (1 + 1)) + (- (v0) * v1)))",
  "obf_leng": 12,
  "result_expr": "- (((v0 - 2) - (v0 * v1)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 | v0) + (v1 + v2))",
  "obf_leng": 7,
  "result_expr": "((v1 | v0) + (v1 + v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((v0 + 1) + (v0 + (1 + v1)))",
  "obf_leng": 9,
  "result_expr": "((v0 + 1) + (v0 + (1 + v1)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((- (v3) + v1) - v3) + (1 + (v2 ^ v2))) + not (v3))",
  "obf_leng": 17,
  "result_expr": "((((v1 - v3) - v3) + 1) + not (v3))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.06,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((((1 - v0) - 1) & v0) + 1) | (1 + (1 + - (v0))))",
  "obf_leng": 18,
  "result_expr": "(((- (v0) & v0) + 1) | (2 - v0))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- ((((v3 - 1) - 1) - (1 - not (1)))) - (((v2 ++ v0) / 1) - v0))",
  "obf_leng": 26,
  "result_expr": "- ((v3 - 5))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.45,
  "obf_var": 3,
  "result_var": 1
},{
  "obf_expr": "((v1 * v3) - (not (1) * (not (1) & ((1 ++ (1 + 1)) / 1))))",
  "obf_leng": 20,
  "result_expr": "((v1 * v3) - -4)",
  "result_leng": 7,
  "success": "yes",
  "time": 0.15,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 - (v0 + v3)) * v3) - (((v2 - v2) & v1) - (not (v3) - not (v1))))",
  "obf_leng": 26,
  "result_expr": "(((v0 - (v0 + v3)) * v3) + (not (v3) - not (v1)))",
  "result_leng": 17,
  "success": "yes",
  "time": 0.14,
  "obf_var": 4,
  "result_var": 3
},{
  "obf_expr": "((v3 * v1) + (v1 | v3))",
  "obf_leng": 7,
  "result_expr": "((v3 * v1) + (v1 | v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.28,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + (1 - ((1 ++ v0) / 1))) | (v1 ^ (1 + 1))) | (v1 ^ v1))",
  "obf_leng": 20,
  "result_expr": "((2 - v0) | (v1 ^ 2))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.3,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((((1 * v0) + (v0 * v0)) + ((1 * v0) + (v0 + v0))) + v0) + v0)",
  "obf_leng": 19,
  "result_expr": "((((v0 + (v0 * v0)) + (v0 + (2 * v0))) + v0) + v0)",
  "result_leng": 15,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v1 | v3) | (- (v1) - not (1)))",
  "obf_leng": 11,
  "result_expr": "((v1 | v3) | - ((v1 + -2)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 - - (v1)) & (v0 * v0))",
  "obf_leng": 9,
  "result_expr": "((v0 + v1) & (v0 * v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 + 1) | (v1 * v0))",
  "obf_leng": 7,
  "result_expr": "(2 | (v1 * v0))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.18,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- (v4) * v4)",
  "obf_leng": 4,
  "result_expr": "- ((v4 * v4))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((1 * (1 + 1)) ^ v2) * (1 + ((1 + 1) + 1))) + (v0 ^ v0))",
  "obf_leng": 19,
  "result_expr": "((2 ^ v2) * 4)",
  "result_leng": 5,
  "success": "yes",
  "time": 1.82,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "(1 + ((((v1 - v1) | v0) & v1) + ((1 + 1) + 1)))",
  "obf_leng": 16,
  "result_expr": "((v0 & v1) + 4)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 ^ 1) | ((v1 * v4) | (v4 + (1 + 1))))",
  "obf_leng": 13,
  "result_expr": "((v1 * v4) | (v4 + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.57,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((v3 ++ v3) / v3) * (v3 * v3)) - ((not (v1) | v1) ^ ((1 + 1) | 1)))",
  "obf_leng": 22,
  "result_expr": "((((v3 ++ v3) / v3) * (v3 * v3)) - -4)",
  "result_leng": 13,
  "success": "yes",
  "time": 0.44,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "- ((((1 + 1) ^ v3) - 1))",
  "obf_leng": 9,
  "result_expr": "- (((2 ^ v3) - 1))",
  "result_leng": 7,
  "success": "yes",
  "time": 3.0,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v3 | v0) ^ (1 - (v0 - 1)))",
  "obf_leng": 11,
  "result_expr": "((v3 | v0) ^ (2 - v0))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.29,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- ((v1 + v2))",
  "obf_leng": 4,
  "result_expr": "- ((v1 + v2))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v3 ^ v3) - v3) + v0)",
  "obf_leng": 8,
  "result_expr": "(v0 - v3)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 * v0) ^ (1 + (v1 + 1)))",
  "obf_leng": 9,
  "result_expr": "((v1 * v0) ^ (v1 + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.35,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 - not (v1)) + 1)",
  "obf_leng": 8,
  "result_expr": "((v1 - not (v1)) + 1)",
  "result_leng": 8,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 * 1) | v3) | (v3 * v3))",
  "obf_leng": 9,
  "result_expr": "((v1 | v3) | (v3 * v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v2 + v2) + v2) + (((((1 ++ v2) / 1) + v2) + (v2 + v2)) + v2))",
  "obf_leng": 19,
  "result_expr": "(((2 * v2) + v2) + (((2 * v2) + (2 * v2)) + v2))",
  "result_leng": 15,
  "success": "yes",
  "time": 0.1,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "not ((((v4 * v0) ^ (v0 - (1 + 1))) & - (1)))",
  "obf_leng": 15,
  "result_expr": "not (((v4 * v0) ^ (v0 - 2)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.3,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 * 1) - (v1 + (v0 - 1))) & ((((1 & v1) ^ (v0 + 1)) | (v1 ^ v1)) | (((v1 | (v1 & v0)) ++ (((1 - 1) ++ (v0 ^ v0)) /s ((1 ++ v0) /s v1))) / 1)))",
  "obf_leng": 46,
  "result_expr": "((v0 - (v1 + (v0 - 1))) & (((1 & v1) ^ (v0 + 1)) | ((0 ++ 0) /s ((1 ++ v0) /s v1))))",
  "result_leng": 27,
  "success": "yes",
  "time": 0.41,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((- ((v3 - 1)) ^ v1) ^ ((((1 | 1) - 1) & 1) | ((v3 * 1) & (v3 ^ v1))))",
  "obf_leng": 24,
  "result_expr": "((- ((v3 - 1)) ^ v1) ^ (v3 & (v3 ^ v1)))",
  "result_leng": 13,
  "success": "yes",
  "time": 1.26,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- ((v1 * v1)) & (((v0 - (v1 - v1)) + v0) + v0))",
  "obf_leng": 16,
  "result_expr": "(- ((v1 * v1)) & ((2 * v0) + v0))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v1 * 1) ^ ((1 ++ ((v0 + v1) - v1)) /s 1)) + ((v0 ++ ((- (v0) * ((v0 ++ v0) / 1)) - - ((v0 - v0)))) /s 1))",
  "obf_leng": 34,
  "result_expr": "((v1 ^ ((v0 + v1) - v1)) - (v0 * v0))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.69,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 | v0) - ((v3 ^ v0) + (v0 & 1)))",
  "obf_leng": 12,
  "result_expr": "((1 | v0) - ((v3 ^ v0) + (v0 & 1)))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.24,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 ++ (((v4 * v4) + v1) + not ((v1 + 1)))) / 1)",
  "obf_leng": 15,
  "result_expr": "(((v4 * v4) + v1) + not ((v1 + 1)))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.13,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- (v4) ^ ((1 + 1) * ((1 | (v1 & 1)) + 1)))",
  "obf_leng": 14,
  "result_expr": "(- (v4) ^ 4)",
  "result_leng": 4,
  "success": "yes",
  "time": 11.49,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "(not (1) * - ((((((1 ++ v0) / v2) ++ (v2 + v2)) / 1) + v2)))",
  "obf_leng": 18,
  "result_expr": "- ((-2 * ((2 * v2) + v2)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "(((((v1 | 1) & (1 | 1)) + 1) - (v1 & v0)) - ((v0 ++ v0) / 1))",
  "obf_leng": 21,
  "result_expr": "(((((v1 | 1) & 1) + 1) - (v1 & v0)) - v0)",
  "result_leng": 15,
  "success": "yes",
  "time": 0.2,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 & 1) ++ ((v0 - 1) & 1)) / ((v0 ++ (v0 & 1)) /s 1))",
  "obf_leng": 18,
  "result_expr": "(((v0 & 1) ++ ((v0 - 1) & 1)) / (v0 & 1))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v0 & ((v0 ++ not (1)) /s - (1))) + (v3 * v3))",
  "obf_leng": 14,
  "result_expr": "((v0 & ((v0 ++ -2) /s -1)) + (v3 * v3))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.57,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 ^ (v0 & v0)) + ((v3 | v0) * 1))",
  "obf_leng": 11,
  "result_expr": "((v1 ^ v0) + (v3 | v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.08,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(- (v4) + 1)",
  "obf_leng": 4,
  "result_expr": "(1 - v4)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 & v0) + ((1 & not (1)) & (((v0 - v0) ++ - (v1)) / (v1 | 1)))) + (((v0 * v0) - 1) + 1))",
  "obf_leng": 30,
  "result_expr": "((v1 & v0) + (v0 * v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v0 ^ not ((v0 & 1)))",
  "obf_leng": 7,
  "result_expr": "(v0 ^ not ((v0 & 1)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((- (v4) * - (v4)) + 1) + (1 + v0))",
  "obf_leng": 11,
  "result_expr": "(((v4 * v4) + 1) + (1 + v0))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.25,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v2 & v2) + ((- (v2) + 1) + (- (1) + (v4 * v4)))) ^ (((v0 + 1) & (v3 & 1)) | (v0 + v3)))",
  "obf_leng": 27,
  "result_expr": "((v2 + ((1 - v2) + ((v4 * v4) - 1))) ^ (((v0 + 1) & (v3 & 1)) | (v0 + v3)))",
  "result_leng": 25,
  "success": "yes",
  "time": 0.47,
  "obf_var": 4,
  "result_var": 4
},{
  "obf_expr": "((1 & v4) | ((v4 ^ (1 + 1)) * - (v4)))",
  "obf_leng": 12,
  "result_expr": "((1 & v4) | - (((v4 ^ 2) * v4)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.24,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((- (v3) ++ (((1 - v3) * v3) | v3)) / - (1)) * v3)",
  "obf_leng": 16,
  "result_expr": "(((- (v3) ++ (((1 - v3) * v3) | v3)) / -1) * v3)",
  "result_leng": 16,
  "success": "yes",
  "time": 0.17,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(1 + - (v1))",
  "obf_leng": 4,
  "result_expr": "(1 - v1)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v4 + v2) ^ ((v4 - not (1)) * 1))",
  "obf_leng": 12,
  "result_expr": "((v4 + v2) ^ (v4 - -2))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.19,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 ++ ((v0 - v0) - v0)) /s 1) ^ (v0 + (1 * ((v0 | v0) + v0))))",
  "obf_leng": 21,
  "result_expr": "(- (v0) ^ (v0 + (2 * v0)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.15,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "v2",
  "obf_leng": 1,
  "result_expr": "v2",
  "result_leng": 1,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((((1 - 1) + (1 * v0)) - ((v0 - 1) ^ (v0 + v0))) - (v0 | v0)) - 1)",
  "obf_leng": 26,
  "result_expr": "(((v0 - ((v0 - 1) ^ (2 * v0))) - v0) - 1)",
  "result_leng": 17,
  "success": "yes",
  "time": 0.06,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v1 ^ - ((v0 - 1)))",
  "obf_leng": 7,
  "result_expr": "(v1 ^ - ((v0 - 1)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 * ((v0 - ((v0 ^ v0) - (v0 & v0))) | ((1 ^ (v1 ^ v1)) - (v1 - 1))))",
  "obf_leng": 25,
  "result_expr": "((2 * v0) | (2 - v1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v4 * v1)",
  "obf_leng": 3,
  "result_expr": "(v4 * v1)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((1 + 1) - v3) + 1) - not (- (v0)))",
  "obf_leng": 14,
  "result_expr": "((3 - v3) - not (- (v0)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.05,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((v3 + v3) ^ ((1 + 1) - (1 * 1))) + ((1 + v3) - not (v3))) + 1)",
  "obf_leng": 23,
  "result_expr": "((((2 * v3) ^ 1) + ((1 + v3) - not (v3))) + 1)",
  "result_leng": 16,
  "success": "yes",
  "time": 0.08,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(1 + ((v4 | ((v3 ++ v4) /s 1)) * v4))",
  "obf_leng": 11,
  "result_expr": "(1 + (v4 * v4))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.15,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "((v3 ++ - ((v4 + (v2 * v2)))) / 1)",
  "obf_leng": 10,
  "result_expr": "- ((v4 + (v2 * v2)))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.16,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((((1 + (1 + 1)) & v0) ^ 1) + v0)",
  "obf_leng": 11,
  "result_expr": "(((3 & v0) ^ 1) + v0)",
  "result_leng": 7,
  "success": "yes",
  "time": 0.12,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v0 - (1 * (v4 * v4)))",
  "obf_leng": 8,
  "result_expr": "(v0 - (v4 * v4))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.15,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- ((v2 | 1)) - v2)",
  "obf_leng": 7,
  "result_expr": "- (((v2 | 1) + v2))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "not (((v1 ^ ((1 ++ 1) / 1)) + (1 + 1)))",
  "obf_leng": 13,
  "result_expr": "not (((v1 ^ 1) + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v0 - v0) - 1) & ((v1 * v1) - 1)) - - (v0))",
  "obf_leng": 18,
  "result_expr": "(((v1 * v1) - 1) + v0)",
  "result_leng": 8,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v4 - 1)",
  "obf_leng": 4,
  "result_expr": "(v4 - 1)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((- (((v1 | v0) & v0)) + not (v0)) ^ (v2 - ((1 | 1) & (1 * (v2 | 1)))))",
  "obf_leng": 23,
  "result_expr": "((not (v0) - ((v1 | v0) & v0)) ^ (v2 - (1 & (v2 | 1))))",
  "result_leng": 19,
  "success": "yes",
  "time": 0.05,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((((1 + 1) + v1) + ((1 + v1) + 1)) + v1) + (1 + ((1 + v1) + (1 + 1))))",
  "obf_leng": 23,
  "result_expr": "((((2 + v1) + (v1 + 2)) + v1) + (v1 + 4))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v1 * v0)",
  "obf_leng": 3,
  "result_expr": "(v1 * v0)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v3 * v3) + (v3 | v2))",
  "obf_leng": 7,
  "result_expr": "((v3 * v3) + (v3 | v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 + v1) + (v1 - 1))",
  "obf_leng": 8,
  "result_expr": "((v0 + v1) + (v1 - 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 ^ 1) ^ (1 + (1 ^ v0)))",
  "obf_leng": 9,
  "result_expr": "((v0 ^ 1) ^ (1 + (1 ^ v0)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.81,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v4 ++ v4) /s 1) * v1) | (1 | v4))",
  "obf_leng": 11,
  "result_expr": "((v4 * v1) | (1 | v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.05,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 * v4) ^ - ((v0 + (v0 - v0))))",
  "obf_leng": 11,
  "result_expr": "((v4 * v4) ^ - (v0))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((not (1) + v4) + ((v4 ^ ((v0 ++ v1) / 1)) | ((v2 - v2) & v2)))",
  "obf_leng": 20,
  "result_expr": "((-2 + v4) + (v4 ^ v1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.16,
  "obf_var": 4,
  "result_var": 2
},{
  "obf_expr": "(((not (1) | (v1 ^ (v2 ^ v1))) & (((v2 * v2) + v0) + - ((v0 | v0)))) | (1 + v0))",
  "obf_leng": 24,
  "result_expr": "(((-2 | v2) & (((v2 * v2) + v0) - v0)) | (1 + v0))",
  "result_leng": 17,
  "success": "yes",
  "time": 0.08,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((1 + 1) ^ (v0 * 1)) - (((1 ++ v1) /s 1) & ((1 & 1) + 1)))",
  "obf_leng": 20,
  "result_expr": "((2 ^ v0) - (v1 & 2))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.76,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 | v1) ^ (1 + (1 + v0)))",
  "obf_leng": 9,
  "result_expr": "((v0 | v1) ^ (v0 + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.16,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 + v1) ^ 1)",
  "obf_leng": 5,
  "result_expr": "((v0 + v1) ^ 1)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 ++ (v3 | ((1 + 1) - (v1 & v1)))) /s 1)",
  "obf_leng": 14,
  "result_expr": "(v3 | (2 - v1))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.07,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(1 - v0)",
  "obf_leng": 4,
  "result_expr": "(1 - v0)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((1 + 1) & ((1 + 1) | v4)) - not (1)) ^ (v0 * v4))",
  "obf_leng": 18,
  "result_expr": "(((2 & (2 | v4)) - -2) ^ (v0 * v4))",
  "result_leng": 13,
  "success": "yes",
  "time": 1.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 * ((1 + 1) ^ (1 + (1 - v3))))",
  "obf_leng": 12,
  "result_expr": "(2 ^ (2 - v3))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.11,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v0 + v0) * (((v0 ++ 1) / v0) & (1 ^ v0))) - (v0 * v0)) - (1 & 1))",
  "obf_leng": 23,
  "result_expr": "((((2 * v0) * (((v0 ++ 1) / v0) & (1 ^ v0))) - (v0 * v0)) - 1)",
  "result_leng": 21,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 + 1) - (((v4 & v4) + not (1)) + v4))",
  "obf_leng": 14,
  "result_expr": "(2 - ((v4 + -2) + v4))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.1,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- (v0)",
  "obf_leng": 2,
  "result_expr": "- (v0)",
  "result_leng": 2,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "not (((v3 * v3) ^ (v2 - 1)))",
  "obf_leng": 10,
  "result_expr": "not (((v3 * v3) ^ (v2 - 1)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.13,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- (((v2 * v2) + v3))",
  "obf_leng": 6,
  "result_expr": "- (((v2 * v2) + v3))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 + v1) - (not (1) * ((v1 & v1) + (v1 + v1))))",
  "obf_leng": 16,
  "result_expr": "((2 * v1) - (-2 * (v1 + (2 * v1))))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.12,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 + 1) + ((1 + 1) ^ not (v4)))",
  "obf_leng": 11,
  "result_expr": "(2 + (2 ^ not (v4)))",
  "result_leng": 7,
  "success": "yes",
  "time": 1.01,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(1 + (v3 + 1))",
  "obf_leng": 5,
  "result_expr": "(v3 + 2)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v2 | ((not (1) & v2) & 1)) + (((1 + 1) ^ v0) + v2))",
  "obf_leng": 17,
  "result_expr": "(v2 + ((2 ^ v0) + v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.15,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + v3)",
  "obf_leng": 3,
  "result_expr": "(1 + v3)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- ((v0 - (v2 * v2)))",
  "obf_leng": 7,
  "result_expr": "- ((v0 - (v2 * v2)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 - v2) | (1 - (not (1) - 1)))",
  "obf_leng": 14,
  "result_expr": "((v0 - v2) | 4)",
  "result_leng": 6,
  "success": "yes",
  "time": 0.21,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + 1) + (1 + 1)) ^ (1 + v4))",
  "obf_leng": 11,
  "result_expr": "(4 ^ (1 + v4))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.62,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 * v4) & ((1 + v4) + 1)) | (v4 & (1 & v0)))",
  "obf_leng": 15,
  "result_expr": "(((v0 * v4) & (v4 + 2)) | (v4 & (1 & v0)))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.38,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- ((v0 | 1)) + (v0 & 1))",
  "obf_leng": 8,
  "result_expr": "((v0 & 1) - (v0 | 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 + 1) + - ((v1 - 1)))",
  "obf_leng": 9,
  "result_expr": "(3 - v1)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((1 & (not (1) & v3)) - v4) + v0)",
  "obf_leng": 12,
  "result_expr": "(v0 - v4)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((v0 + v0) ++ ((v0 + v0) * (((1 + v0) + (1 - v0)) * (1 + 1)))) /s 1)",
  "obf_leng": 22,
  "result_expr": "((2 * v0) * (((1 + v0) + (1 - v0)) * 2))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.09,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((- (v3) | (1 & v3)) - v4) * v4) & ((not ((1 & v3)) | ((v4 ++ (v1 - v3)) /s 1)) | v3))",
  "obf_leng": 28,
  "result_expr": "((((- (v3) | (1 & v3)) - v4) * v4) & ((not ((1 & v3)) | (v1 - v3)) | v3))",
  "result_leng": 24,
  "success": "yes",
  "time": 0.07,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v0 + (1 + v0)) ^ (1 + (v3 + 1))) ^ 1)",
  "obf_leng": 13,
  "result_expr": "(((v0 + (1 + v0)) ^ (v3 + 2)) ^ 1)",
  "result_leng": 11,
  "success": "yes",
  "time": 2.2,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 + v4) - (v0 | 1))",
  "obf_leng": 8,
  "result_expr": "((2 * v4) - (v0 | 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 - (- (v0) + (v0 * v2))) - v0) ^ (v0 | (((v0 ++ (v1 & v0)) /s 1) * ((1 ^ v2) ^ v2))))",
  "obf_leng": 28,
  "result_expr": "(((v0 - ((v0 * v2) - v0)) - v0) ^ v0)",
  "result_leng": 14,
  "success": "yes",
  "time": 0.39,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((v1 + 1) + 1) | (v3 - (v3 - (v3 * v3))))",
  "obf_leng": 15,
  "result_expr": "((v1 + 2) | (v3 - (v3 - (v3 * v3))))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.14,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 + 1) ^ (not ((v1 - v1)) & (v0 * v1)))",
  "obf_leng": 14,
  "result_expr": "((v0 + 1) ^ (v0 * v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.35,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 & not (v0)) | (((v4 * v4) * 1) | v0))",
  "obf_leng": 13,
  "result_expr": "((v1 & not (v0)) | ((v4 * v4) | v0))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.12,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((v3 ^ (1 + 1)) + (v3 - 1))",
  "obf_leng": 10,
  "result_expr": "((v3 ^ 2) + (v3 - 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.11,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(1 - (v3 + 1))",
  "obf_leng": 6,
  "result_expr": "- (v3)",
  "result_leng": 2,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- (v1) + - (v0))",
  "obf_leng": 5,
  "result_expr": "- ((v0 + v1))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(not ((1 + v0)) * (1 | 1))",
  "obf_leng": 9,
  "result_expr": "not ((1 + v0))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v3 * 1) * v3) + (v1 - 1))",
  "obf_leng": 10,
  "result_expr": "((v3 * v3) + (v1 - 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.14,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((v0 + v0) + v0) + (((v0 * v0) ++ ((v0 * v0) & v0)) / 1)) ^ ((v0 ++ (v0 ^ v0)) / ((v0 ++ 1) / 1)))",
  "obf_leng": 29,
  "result_expr": "(((2 * v0) + v0) + ((v0 * v0) & v0))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.4,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 * v4) + (- (v1) + 1)) + v1)",
  "obf_leng": 10,
  "result_expr": "(((v0 * v4) + (1 - v1)) + v1)",
  "result_leng": 10,
  "success": "yes",
  "time": 0.05,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(- (((v2 - 1) - 1)) ^ v0)",
  "obf_leng": 10,
  "result_expr": "(- ((v2 - 2)) ^ v0)",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v3 + ((not ((v3 & v3)) + ((v3 * v3) + 1)) ^ 1))",
  "obf_leng": 15,
  "result_expr": "(v3 + ((not (v3) + ((v3 * v3) + 1)) ^ 1))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((- (v3) - ((v2 ++ v3) / 1)) - (v3 + v3))",
  "obf_leng": 14,
  "result_expr": "- (((2 * v3) + (2 * v3)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "- (((((v0 & 1) ^ (1 + 1)) ^ v0) - (1 - (not (1) ^ (v0 & 1)))))",
  "obf_leng": 22,
  "result_expr": "- (((((v0 & 1) ^ 2) ^ v0) - (1 - (-2 ^ (v0 & 1)))))",
  "result_leng": 19,
  "success": "yes",
  "time": 0.1,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- ((not ((v2 + 1)) - (v2 * v2)))",
  "obf_leng": 11,
  "result_expr": "- ((not ((v2 + 1)) - (v2 * v2)))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.22,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 - 1) - (v0 * v0))",
  "obf_leng": 9,
  "result_expr": "- ((v0 * v0))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v2 + ((1 + (v2 + 1)) + 1))",
  "obf_leng": 9,
  "result_expr": "(v2 + (v2 + 3))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((((v2 - v2) ^ not (v2)) - (v2 * v1)) + v2) ^ not (((v0 | v0) * 1)))",
  "obf_leng": 23,
  "result_expr": "(((not (v2) - (v2 * v1)) + v2) ^ not (v0))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.22,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v3 * v3) + (v3 + (((v2 ++ v0) /s 1) + v1))) + - ((1 * v1)))",
  "obf_leng": 18,
  "result_expr": "(((v3 * v3) + (v3 + (v0 + v1))) - v1)",
  "result_leng": 12,
  "success": "yes",
  "time": 0.05,
  "obf_var": 4,
  "result_var": 3
},{
  "obf_expr": "(((v0 + 1) + 1) ^ (v0 | 1))",
  "obf_leng": 9,
  "result_expr": "((v0 + 2) ^ (v0 | 1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v4 ^ (1 + 1)) + (v4 - - (v4)))",
  "obf_leng": 11,
  "result_expr": "((v4 ^ 2) + (2 * v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.18,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 - 1) - - ((((1 + 1) ^ v3) + (v2 | v3))))",
  "obf_leng": 16,
  "result_expr": "((2 ^ v3) + (v2 | v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.17,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + (v1 ^ v4))",
  "obf_leng": 5,
  "result_expr": "(1 + (v1 ^ v4))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.38,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- (v1) + (v0 + (v0 + v0)))",
  "obf_leng": 8,
  "result_expr": "((v0 + (2 * v0)) - v1)",
  "result_leng": 8,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v2 + (not (((1 + 1) + (v4 + 1))) - v2))",
  "obf_leng": 14,
  "result_expr": "not ((v4 + 3))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "((v0 ++ ((((v1 + v1) - 1) + ((1 + 1) ^ v1)) + 1)) / 1)",
  "obf_leng": 18,
  "result_expr": "((((2 * v1) - 1) + (2 ^ v1)) + 1)",
  "result_leng": 12,
  "success": "yes",
  "time": 0.42,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "((- (1) | v1) & ((v3 - (v3 - (v4 * v2))) | 1))",
  "obf_leng": 16,
  "result_expr": "((v3 - (v3 - (v4 * v2))) | 1)",
  "result_leng": 11,
  "success": "yes",
  "time": 0.03,
  "obf_var": 4,
  "result_var": 3
},{
  "obf_expr": "(((v2 - ((1 & v2) + v0)) + ((1 + v0) + v2)) + v2)",
  "obf_leng": 16,
  "result_expr": "(((v2 - ((1 & v2) + v0)) + ((1 + v0) + v2)) + v2)",
  "result_leng": 16,
  "success": "yes",
  "time": 0.11,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 + v0) ^ ((v4 * v4) * 1))",
  "obf_leng": 9,
  "result_expr": "((v4 + v0) ^ (v4 * v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.21,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "not ((1 + (1 + v4)))",
  "obf_leng": 7,
  "result_expr": "not ((v4 + 2))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((- ((v0 - 1)) + (((v2 + 1) + (v0 - v2)) - ((v1 - v1) + v2))) & (v1 * v2))",
  "obf_leng": 26,
  "result_expr": "(((((v2 + 1) + (v0 - v2)) - v2) - (v0 - 1)) & (v1 * v2))",
  "result_leng": 21,
  "success": "yes",
  "time": 0.11,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(v0 | (v3 | ((1 + 1) - v0)))",
  "obf_leng": 10,
  "result_expr": "(v0 | (v3 | (2 - v0)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 & v1) ^ (v2 * v2))",
  "obf_leng": 7,
  "result_expr": "((v0 & v1) ^ (v2 * v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(v0 ^ (v0 - 1))",
  "obf_leng": 6,
  "result_expr": "(v0 ^ (v0 - 1))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((((v0 ++ 1) /s v0) & (1 + 1)) & 1) - (v1 & v1)) ^ (v0 * v1))",
  "obf_leng": 20,
  "result_expr": "(- (v1) ^ (v0 * v1))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.26,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 * v2) - (not (1) + v4))",
  "obf_leng": 10,
  "result_expr": "((v4 * v2) - (-2 + v4))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 | v3) + (- ((v3 & v0)) + (v0 * - (v0))))",
  "obf_leng": 13,
  "result_expr": "((v0 | v3) - ((v0 * v0) + (v3 & v0)))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.3,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 * - (v1)) * 1)",
  "obf_leng": 6,
  "result_expr": "- ((v1 * v1))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((((v2 ++ v2) / 1) * 1) + v0) + (v2 * v2))",
  "obf_leng": 13,
  "result_expr": "((v2 + v0) + (v2 * v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((- (v3) + 1) + (v4 * v3))",
  "obf_leng": 8,
  "result_expr": "((1 - v3) + (v4 * v3))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + (1 + (1 | v0))) + (v0 * v0)) - v0)",
  "obf_leng": 14,
  "result_expr": "((((1 | v0) + 2) + (v0 * v0)) - v0)",
  "result_leng": 12,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v0 ^ (1 * 1)) | (v1 * v1))",
  "obf_leng": 9,
  "result_expr": "((v0 ^ 1) | (v1 * v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + 1) + 1) + v2)",
  "obf_leng": 7,
  "result_expr": "(3 + v2)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v2 * v4) ^ (not (1) * ((v4 - v4) + not (1)))) * 1)",
  "obf_leng": 18,
  "result_expr": "((v2 * v4) ^ 4)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.42,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v4 - - ((v4 - (- (v4) - (v3 | v3)))))",
  "obf_leng": 14,
  "result_expr": "(v4 + (v4 + (v4 + v3)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(not (((v2 * v2) - v0)) - - (1))",
  "obf_leng": 12,
  "result_expr": "- (((v2 * v2) - v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.05,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 + (1 + (1 + v4))) - not (1))",
  "obf_leng": 12,
  "result_expr": "((v4 + (v4 + 2)) - -2)",
  "result_leng": 9,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v2 * (1 * v2)) - - (((v1 ++ (1 * (v1 | v0))) / 1)))",
  "obf_leng": 17,
  "result_expr": "((v2 * v2) + (v1 | v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.11,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((v3 | v0) & ((1 + 1) - ((v3 ++ v3) /s 1)))",
  "obf_leng": 14,
  "result_expr": "((v3 | v0) & (2 - v3))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.12,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + ((1 + ((1 + 1) + (1 + v0))) + 1))",
  "obf_leng": 13,
  "result_expr": "(v0 + 6)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 ++ (v0 - v0)) / (1 & 1)) - (1 * ((v1 * v1) + ((v0 & 1) | v0))))",
  "obf_leng": 23,
  "result_expr": "- (((v1 * v1) + v0))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.1,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v0 ^ not (((v0 ^ (v0 * v0)) ^ ((1 | 1) * (v0 - 1)))))",
  "obf_leng": 18,
  "result_expr": "(v0 ^ not (((v0 ^ (v0 * v0)) ^ (v0 - 1))))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- (1) & (1 + ((1 + v2) & - (1))))",
  "obf_leng": 11,
  "result_expr": "(v2 + 2)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((not (v1) ^ ((1 + v0) ^ v1)) ++ - (not ((v0 + 1)))) /s 1) & (- ((v1 - 1)) + 1))",
  "obf_leng": 26,
  "result_expr": "(- (not ((v0 + 1))) & (2 - v1))",
  "result_leng": 11,
  "success": "yes",
  "time": 2.01,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 * ((v1 - 1) - not (v1))) | ((1 + 1) + - (v1)))",
  "obf_leng": 18,
  "result_expr": "(((v1 - 1) - not (v1)) | (2 - v1))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.26,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v4 * v4) ^ v1)",
  "obf_leng": 5,
  "result_expr": "((v4 * v4) ^ v1)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- ((not (v1) + (v3 * v3))) - (1 ^ (1 - (1 ^ v1))))",
  "obf_leng": 18,
  "result_expr": "- (((not (v1) + (v3 * v3)) + (1 ^ (1 - (1 ^ v1)))))",
  "result_leng": 17,
  "success": "yes",
  "time": 0.48,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + ((v3 + 1) * not (v3)))",
  "obf_leng": 9,
  "result_expr": "(1 + ((v3 + 1) * not (v3)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 - v0) + ((v0 - 1) - ((1 | v0) * v0)))",
  "obf_leng": 16,
  "result_expr": "((1 - v0) + ((v0 - 1) - ((1 | v0) * v0)))",
  "result_leng": 16,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v4 - 1) | not ((- (v4) ^ (- (v4) + (1 + 1)))))",
  "obf_leng": 16,
  "result_expr": "((v4 - 1) | not ((- (v4) ^ (2 - v4))))",
  "result_leng": 14,
  "success": "yes",
  "time": 43.97,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- (v2)",
  "obf_leng": 2,
  "result_expr": "- (v2)",
  "result_leng": 2,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((- (v1) ^ - (v1)) + (v1 * v2)) & - (1)) ^ (v0 & v1))",
  "obf_leng": 16,
  "result_expr": "((v1 * v2) ^ (v0 & v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.12,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((((1 ++ v1) / 1) * v2) & (v2 * ((1 & 1) + 1)))",
  "obf_leng": 15,
  "result_expr": "((v1 * v2) & (v2 * 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.12,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 ++ ((v4 + 1) - (not ((1 + 1)) - v3))) / 1)",
  "obf_leng": 17,
  "result_expr": "((v4 + 1) - (-3 - v3))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.19,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "- ((((1 ++ 1) / (v0 ^ v0)) & ((v0 + 1) + ((1 + v0) * 1))))",
  "obf_leng": 18,
  "result_expr": "- (((v0 + 1) + (1 + v0)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.06,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v1 + 1) + (v1 * v0))",
  "obf_leng": 7,
  "result_expr": "((v1 + 1) + (v1 * v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "not ((v3 + 1))",
  "obf_leng": 5,
  "result_expr": "not ((v3 + 1))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((1 | - (v2)) + 1) & ((v3 & - (1)) | v2)) ^ (v2 & 1))",
  "obf_leng": 17,
  "result_expr": "((((1 | - (v2)) + 1) & (v3 | v2)) ^ (v2 & 1))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.54,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 ++ ((((v0 ^ v0) | - (v0)) & ((v2 * v2) * 1)) * 1)) / ((v0 ++ v0) / v0))",
  "obf_leng": 22,
  "result_expr": "((v0 ++ (- (v0) & (v2 * v2))) / ((v0 ++ v0) / v0))",
  "result_leng": 14,
  "success": "yes",
  "time": 2.97,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v0 - ((((v1 & v1) & not (v1)) | 1) + - (v1)))",
  "obf_leng": 15,
  "result_expr": "(v0 - (1 - v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 + ((v4 + (v4 + v4)) + 1)) + (1 - (((v4 | v4) ^ not (v4)) - 1)))",
  "obf_leng": 23,
  "result_expr": "((v4 + ((v4 + (2 * v4)) + 1)) + 3)",
  "result_leng": 11,
  "success": "yes",
  "time": 0.08,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v0 ^ 1) + v0)",
  "obf_leng": 5,
  "result_expr": "((v0 ^ 1) + v0)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 - (v0 * v1)) + 1) - ((v1 + not (1)) - 1))",
  "obf_leng": 18,
  "result_expr": "(((v1 - (v0 * v1)) + 1) - (v1 - 3))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- (((v0 + v1) - (((v0 + 1) + 1) | (1 + 1))))",
  "obf_leng": 15,
  "result_expr": "- (((v0 + v1) - ((v0 + 2) | 2)))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.86,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "not ((((v0 ++ 1) /s 1) | (v2 + v2)))",
  "obf_leng": 11,
  "result_expr": "not ((1 | (2 * v2)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "((- ((v2 * 1)) * 1) + (v1 * (v2 - (v1 + v2))))",
  "obf_leng": 15,
  "result_expr": "((v1 * (v2 - (v1 + v2))) - v2)",
  "result_leng": 11,
  "success": "yes",
  "time": 0.4,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v1 ^ (((1 + 1) + ((v3 * v3) & not (v1))) & (v2 - (v2 + (1 & 1)))))",
  "obf_leng": 22,
  "result_expr": "(v1 ^ ((2 + ((v3 * v3) & not (v1))) & (v2 - (v2 + 1))))",
  "result_leng": 18,
  "success": "yes",
  "time": 0.15,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(v3 * v4)",
  "obf_leng": 3,
  "result_expr": "(v3 * v4)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 ^ (1 - v1)) ^ (1 & not (1)))",
  "obf_leng": 12,
  "result_expr": "(v4 ^ (1 - v1))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.1,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 - 1) + (((v0 - 1) - 1) - 1))",
  "obf_leng": 15,
  "result_expr": "((v0 - 1) + (v0 - 3))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.06,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- ((v2 - 1)) & (v2 * v4))",
  "obf_leng": 9,
  "result_expr": "(- ((v2 - 1)) & (v2 * v4))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.11,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v4 + (v4 + not (- (v4))))",
  "obf_leng": 8,
  "result_expr": "(v4 + (v4 + not (- (v4))))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.47,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((((1 ++ (v2 * v0)) /s 1) + v1) ^ (v1 - v1)) + ((v1 - v0) * v2))",
  "obf_leng": 21,
  "result_expr": "(((v2 * v0) + v1) + ((v1 - v0) * v2))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.08,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(- (v2) + ((- ((1 + v0)) | 1) - (v2 * not (v2))))",
  "obf_leng": 16,
  "result_expr": "(((not (v0) | 1) - (v2 * not (v2))) - v2)",
  "result_leng": 15,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((((v1 ++ v1) / v1) - (v1 - 1)) * v1) - ((v1 + 1) + v1))",
  "obf_leng": 20,
  "result_expr": "(((((v1 ++ v1) / v1) - (v1 - 1)) * v1) - ((v1 + 1) + v1))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v1 | v0) - not ((v1 + 1)))",
  "obf_leng": 10,
  "result_expr": "((v1 | v0) - not ((v1 + 1)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 * v4) * v0)",
  "obf_leng": 5,
  "result_expr": "(v4 * v0)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 - 1) ^ (v0 + (1 + 1)))",
  "obf_leng": 10,
  "result_expr": "((v0 - 1) ^ (v0 + 2))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.68,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v1 | (v0 | (v2 * v2)))",
  "obf_leng": 7,
  "result_expr": "(v1 | (v0 | (v2 * v2)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(v4 * v4)",
  "obf_leng": 3,
  "result_expr": "(v4 * v4)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(1 * ((v2 ^ v3) + (((v0 ++ v3) /s 1) ^ ((1 + 1) & not (1)))))",
  "obf_leng": 19,
  "result_expr": "((v2 ^ v3) + (v3 ^ 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 1.22,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((1 + (1 + (v2 + 1))) + (1 + v2)) + (- (v2) + 1))",
  "obf_leng": 16,
  "result_expr": "(((v2 + 3) + (1 + v2)) + (1 - v2))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.06,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((1 + 1) & (v0 | (v1 & 1))) - (v1 * v1))",
  "obf_leng": 14,
  "result_expr": "((2 & (v0 | (v1 & 1))) - (v1 * v1))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.95,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((v0 ++ (1 * (v0 + v0))) /s ((1 ++ 1) / not (1))) ^ (((1 + 1) + (1 + 1)) + 1)) ^ 1)",
  "obf_leng": 27,
  "result_expr": "(((2 * v0) ^ 5) ^ 1)",
  "result_leng": 7,
  "success": "yes",
  "time": 0.08,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v1 * - (1)) - v0) ^ (v1 ^ v0)) ^ v1)",
  "obf_leng": 13,
  "result_expr": "((- ((v1 + v0)) ^ (v1 ^ v0)) ^ v1)",
  "result_leng": 10,
  "success": "yes",
  "time": 0.1,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v3 - - ((v3 - (- (v3) - v2))))",
  "obf_leng": 12,
  "result_expr": "(v3 + (v3 + (v3 + v2)))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((1 + 1) + v4) + 1) + (v1 + 1))",
  "obf_leng": 11,
  "result_expr": "((v4 + 3) + (v1 + 1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 * - (v4)) - (- (v3) + 1))",
  "obf_leng": 10,
  "result_expr": "- (((v4 * v4) + (1 - v3)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.13,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + - ((v0 - 1)))",
  "obf_leng": 7,
  "result_expr": "(2 - v0)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 & v1) | (v0 ^ v1)) | - ((v0 - 1)))",
  "obf_leng": 13,
  "result_expr": "((v0 | v1) | - ((v0 - 1)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v2 | (v4 | - (1))) | v1) & ((v4 * v4) ^ (v1 & v0)))",
  "obf_leng": 16,
  "result_expr": "((v4 * v4) ^ (v1 & v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.41,
  "obf_var": 4,
  "result_var": 3
},{
  "obf_expr": "((v0 * v0) + not (1))",
  "obf_leng": 7,
  "result_expr": "((v0 * v0) + -2)",
  "result_leng": 6,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((1 ++ (v0 ^ ((v0 * v0) | (1 ^ v0)))) / 1) ^ 1)",
  "obf_leng": 15,
  "result_expr": "((v0 ^ ((v0 * v0) | (1 ^ v0))) ^ 1)",
  "result_leng": 11,
  "success": "yes",
  "time": 0.25,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 - ((v0 & (v1 | v1)) & (v0 * v0))) - 1)",
  "obf_leng": 15,
  "result_expr": "- (((v0 & v1) & (v0 * v0)))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.05,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((((v1 ^ v1) ^ v1) - (1 + 1)) - v1) + (((v0 - 1) - 1) - - (v1)))",
  "obf_leng": 25,
  "result_expr": "(((v1 - 2) - v1) + ((v0 - 2) + v1))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 * v3) + (- (not (((v3 ++ v3) / v3))) & v3))",
  "obf_leng": 14,
  "result_expr": "((v4 * v3) + (- (not (((v3 ++ v3) / v3))) & v3))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.36,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- ((v2 + v0))",
  "obf_leng": 4,
  "result_expr": "- ((v2 + v0))",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((- (1) & - (((v1 | v0) & (v2 * v0)))) | ((1 * (v1 | (v1 - v1))) - v1))",
  "obf_leng": 23,
  "result_expr": "- (((v1 | v0) & (v2 * v0)))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.76,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v3 & v3) * (v3 - (1 ^ 1))) + (v0 | 1))",
  "obf_leng": 14,
  "result_expr": "((v3 * v3) + (v0 | 1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 & 1) + (((v1 ^ v1) | not (v2)) + ((1 ^ 1) - (v1 * v2))))",
  "obf_leng": 20,
  "result_expr": "(1 + (not (v2) - (v1 * v2)))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + v0) ^ ((v1 & v1) * v1)) * 1)",
  "obf_leng": 11,
  "result_expr": "((1 + v0) ^ (v1 * v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + 1) ^ ((v2 & v0) | (v0 | (v1 & v0)))) + (1 * (((v0 ^ v2) + (v2 | v2)) - v2)))",
  "obf_leng": 26,
  "result_expr": "((2 ^ v0) + (((v0 ^ v2) + v2) - v2))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.09,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(not (v3) + v0)",
  "obf_leng": 5,
  "result_expr": "(not (v3) + v0)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(not (((1 + 1) & (1 ^ ((v2 ++ v3) /s 1)))) + v3)",
  "obf_leng": 15,
  "result_expr": "(not ((2 & (1 ^ v3))) + v3)",
  "result_leng": 9,
  "success": "yes",
  "time": 0.47,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "((v4 | ((((v4 ++ v2) / v0) | v2) | not (v4))) + (1 + ((v4 * v4) + - ((v4 | v1)))))",
  "obf_leng": 24,
  "result_expr": "((v4 | ((((v4 ++ v2) / v0) | v2) | not (v4))) + (1 + ((v4 * v4) - (v4 | v1))))",
  "result_leng": 24,
  "success": "yes",
  "time": 0.11,
  "obf_var": 4,
  "result_var": 4
},{
  "obf_expr": "((((v3 ^ (1 + 1)) + ((1 + 1) + 1)) + ((v3 + 1) + v3)) + ((1 + 1) ^ v3))",
  "obf_leng": 23,
  "result_expr": "((((v3 ^ 2) + 3) + ((v3 + 1) + v3)) + (2 ^ v3))",
  "result_leng": 15,
  "success": "yes",
  "time": 2.46,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 + ((1 | v4) + (1 & v4))) + (1 + (((1 + v4) + 1) - not (v4))))",
  "obf_leng": 22,
  "result_expr": "((1 + ((1 | v4) + (1 & v4))) + (1 + ((v4 + 2) - not (v4))))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.21,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- ((- ((v1 - v2)) + ((v1 & v0) + (v0 & v1))))",
  "obf_leng": 14,
  "result_expr": "- ((((v1 & v0) + (v0 & v1)) - (v1 - v2)))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.8,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v0 - 1) - (1 | (1 + v0))) + (v0 - 1))",
  "obf_leng": 16,
  "result_expr": "(((v0 - 1) - (1 | (1 + v0))) + (v0 - 1))",
  "result_leng": 16,
  "success": "yes",
  "time": 0.09,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((not (v2) | v2) & ((1 - (1 & 1)) | ((v3 + (v1 * 1)) ^ (v3 + v3))))",
  "obf_leng": 22,
  "result_expr": "((v3 + v1) ^ (2 * v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.2,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((v1 & (v1 | v0)) - (((v0 + v0) + (1 * v0)) ^ (v1 - 1))) - (1 + v1))",
  "obf_leng": 24,
  "result_expr": "(((v1 & (v1 | v0)) - (((2 * v0) + v0) ^ (v1 - 1))) - (1 + v1))",
  "result_leng": 22,
  "success": "yes",
  "time": 0.37,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 + (1 | v0)) + - (v0)) + ((v0 * v0) * 1))",
  "obf_leng": 14,
  "result_expr": "(((v0 + (1 | v0)) - v0) + (v0 * v0))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 * v0) & (not (v0) - v0)) + - ((v0 * v0)))",
  "obf_leng": 15,
  "result_expr": "(((v0 * v0) & (not (v0) - v0)) - (v0 * v0))",
  "result_leng": 15,
  "success": "yes",
  "time": 13.42,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- ((- ((1 & (1 + v2))) - ((1 + 1) | (1 - (v2 - 1)))))",
  "obf_leng": 20,
  "result_expr": "((1 & (1 + v2)) + (2 | (2 - v2)))",
  "result_leng": 12,
  "success": "yes",
  "time": 1.74,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 & v1) * v1) ^ (v1 + 1))",
  "obf_leng": 9,
  "result_expr": "((v1 * v1) ^ (v1 + 1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v0 | ((v4 * v4) - (v0 ^ v0))) & - (1))",
  "obf_leng": 13,
  "result_expr": "(v0 | (v4 * v4))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v1 + (v0 | v0)) ^ ((v0 | 1) + 1)) ^ (1 & v0))",
  "obf_leng": 15,
  "result_expr": "(((v1 + v0) ^ ((v0 | 1) + 1)) ^ (1 & v0))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 + 1) + 1) - ((v0 ++ ((v0 + (v0 - 1)) | 1)) / (1 | 1)))",
  "obf_leng": 21,
  "result_expr": "((v0 + 2) - ((v0 + (v0 - 1)) | 1))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v0 * v2)",
  "obf_leng": 3,
  "result_expr": "(v0 * v2)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 + - ((1 + v3))) ^ (v0 | (v3 * 1)))",
  "obf_leng": 12,
  "result_expr": "(- (v3) ^ (v0 | v3))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.09,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((not (1) | not (1)) + ((v1 ++ v2) / 1)) + ((1 + (1 | 1)) ^ v4)) - v2)",
  "obf_leng": 24,
  "result_expr": "(((-2 + v2) + (2 ^ v4)) - v2)",
  "result_leng": 11,
  "success": "yes",
  "time": 2.78,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "not (((v0 + (not (1) | (1 + 1))) - ((v4 + (v4 | v4)) & (v0 - (1 + 1)))))",
  "obf_leng": 25,
  "result_expr": "not (((v0 + -2) - ((2 * v4) & (v0 - 2))))",
  "result_leng": 16,
  "success": "yes",
  "time": 0.35,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 | v0)",
  "obf_leng": 3,
  "result_expr": "(1 | v0)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 - (v4 - 1)) & ((v0 - 1) - 1))",
  "obf_leng": 15,
  "result_expr": "((2 - v4) & (v0 - 2))",
  "result_leng": 9,
  "success": "yes",
  "time": 1.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 + v2) + not ((1 + (1 + 1))))",
  "obf_leng": 11,
  "result_expr": "(v2 + -3)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v1 + 1) + 1) + ((1 + v0) + 1))",
  "obf_leng": 11,
  "result_expr": "((v1 + 2) + (v0 + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.05,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((((1 + v0) - (1 - v0)) + ((v1 * v2) + (1 * v0))) ++ (v1 | (- (v1) - 1))) / - (1)) - ((- ((v0 + v0)) & ((1 + v2) | - (1))) - (v0 - 1)))",
  "obf_leng": 47,
  "result_expr": "((((((1 + v0) - (1 - v0)) + ((v1 * v2) + v0)) ++ -1) / -1) + ((2 * v0) + (v0 - 1)))",
  "result_leng": 30,
  "success": "yes",
  "time": 0.58,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((((v1 ^ not (v4)) - v0) - v4) + (1 + v0))",
  "obf_leng": 15,
  "result_expr": "((((v1 ^ not (v4)) - v0) - v4) + (1 + v0))",
  "result_leng": 15,
  "success": "yes",
  "time": 0.15,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((1 | v2) - ((v1 - 1) - (v3 * v3))) - (v2 & not (1)))",
  "obf_leng": 21,
  "result_expr": "(((1 | v2) - ((v1 - 1) - (v3 * v3))) - (v2 & -2))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.1,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(1 + ((1 + (1 + 1)) + (v3 | v0)))",
  "obf_leng": 11,
  "result_expr": "((v3 | v0) + 4)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.06,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v3 ^ ((v3 ^ v3) + (((v3 * 1) * v3) ^ (1 & (v1 - v1)))))",
  "obf_leng": 18,
  "result_expr": "(v3 ^ (v3 * v3))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 1
},{
  "obf_expr": "(1 + ((v4 * (v4 & v4)) - (1 - v0)))",
  "obf_leng": 13,
  "result_expr": "(1 + ((v4 * v4) - (1 - v0)))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 ^ 1) | (v0 * v0)) & ((- (not (1)) - v0) ^ (1 + 1)))",
  "obf_leng": 19,
  "result_expr": "((v0 * v0) & (- ((-2 + v0)) ^ 2))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.37,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(not ((1 + v4)) - (- (v0) * v0))",
  "obf_leng": 11,
  "result_expr": "(not ((1 + v4)) + (v0 * v0))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.43,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- ((((v4 * v4) - v1) - v4))",
  "obf_leng": 10,
  "result_expr": "- ((((v4 * v4) - v1) - v4))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.28,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 * (1 & (1 + v1))) + ((v0 | (v0 & v0)) * v1)) & (v0 + v0))",
  "obf_leng": 19,
  "result_expr": "(((1 & (1 + v1)) + (v0 * v1)) & (2 * v0))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.08,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v0 + (1 ^ v0)) - (- ((1 ^ v0)) - ((1 ^ v0) + v0))) + (- (((1 ^ 1) + v0)) ^ 1))",
  "obf_leng": 27,
  "result_expr": "(((v0 + (1 ^ v0)) + ((1 ^ v0) + ((1 ^ v0) + v0))) + (- (v0) ^ 1))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "not ((not (((1 + v0) + 1)) ^ (v1 - ((v2 + v1) + - (v0)))))",
  "obf_leng": 19,
  "result_expr": "not ((not ((v0 + 2)) ^ (v1 - ((v2 + v1) - v0))))",
  "result_leng": 17,
  "success": "yes",
  "time": 0.07,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(not (v1) - - (((v0 * v1) - - ((v1 - 1)))))",
  "obf_leng": 16,
  "result_expr": "(not (v1) + ((v0 * v1) + (v1 - 1)))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v4 - 1) + (((v1 - v1) & (v0 * (v4 ^ v3))) | not (1)))",
  "obf_leng": 19,
  "result_expr": "(v4 + -3)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.05,
  "obf_var": 4,
  "result_var": 1
},{
  "obf_expr": "(not ((v2 + 1)) ^ (v2 - (1 + 1)))",
  "obf_leng": 12,
  "result_expr": "(not ((v2 + 1)) ^ (v2 - 2))",
  "result_leng": 10,
  "success": "yes",
  "time": 0.11,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v1 + v4) & (v4 * v2))",
  "obf_leng": 7,
  "result_expr": "((v1 + v4) & (v4 * v2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((1 ^ v2) - (((v2 * v2) ^ v2) - (1 * not (v2))))",
  "obf_leng": 17,
  "result_expr": "((1 ^ v2) - (((v2 * v2) ^ v2) - not (v2)))",
  "result_leng": 15,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(v1 + ((((v3 ^ v0) & ((v1 ++ 1) / v1)) ^ v3) + ((v3 * not (v3)) + v3)))",
  "obf_leng": 21,
  "result_expr": "(v1 + ((((v3 ^ v0) & ((v1 ++ 1) / v1)) ^ v3) + ((v3 * not (v3)) + v3)))",
  "result_leng": 21,
  "success": "yes",
  "time": 0.05,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v0 ++ ((v0 - (v0 + 1)) + not (1))) /s 1) - v0)",
  "obf_leng": 17,
  "result_expr": "(((v0 - (v0 + 1)) + -2) - v0)",
  "result_leng": 12,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 ^ not (1)) - ((v0 - 1) ^ (1 * ((1 + 1) + (1 + 1)))))",
  "obf_leng": 21,
  "result_expr": "not (((v0 - 1) ^ 4))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.21,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v3 * v2) - (v2 ^ 1))",
  "obf_leng": 8,
  "result_expr": "((v3 * v2) - (v2 ^ 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.1,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v3 * v3) | (1 + v3))",
  "obf_leng": 7,
  "result_expr": "((v3 * v3) | (1 + v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.09,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v3 * v3) | (1 + ((1 & 1) + v2))) + (not (v0) & (v0 & 1)))",
  "obf_leng": 19,
  "result_expr": "((v3 * v3) | (v2 + 2))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.26,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(v3 + (not (1) - ((((v1 | v2) ++ v3) / (1 & 1)) & ((v0 | v3) & (1 + 1)))))",
  "obf_leng": 24,
  "result_expr": "(v3 + (-2 - (v3 & ((v0 | v3) & 2))))",
  "result_leng": 13,
  "success": "yes",
  "time": 2.87,
  "obf_var": 4,
  "result_var": 2
},{
  "obf_expr": "(((v0 | (v1 & v0)) ^ (1 | 1)) - ((v1 & v1) + ((- (1) + v1) * v1)))",
  "obf_leng": 21,
  "result_expr": "((v0 ^ 1) - (v1 + ((v1 - 1) * v1)))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((not (v0) - v0) + ((1 - (((1 ++ 1) / 1) & (v0 - v0))) + - ((v0 * (1 + 1)))))",
  "obf_leng": 27,
  "result_expr": "((not (v0) - v0) + (1 - (v0 * 2)))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.05,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((v2 * not (v1)) | - (1)) & (((v4 + v3) ^ (v4 * v4)) + - (v4))) + v4)",
  "obf_leng": 21,
  "result_expr": "((v4 + v3) ^ (v4 * v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 2.07,
  "obf_var": 4,
  "result_var": 2
},{
  "obf_expr": "(((v0 * v0) | v0) * 1)",
  "obf_leng": 7,
  "result_expr": "((v0 * v0) | v0)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v4 + 1) + 1)",
  "obf_leng": 5,
  "result_expr": "(v4 + 2)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "- ((v3 ^ (v3 + v3)))",
  "obf_leng": 6,
  "result_expr": "- ((v3 ^ (2 * v3)))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.09,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v4 - ((v2 ++ v4) / 1)) | (v3 * v4)) + - (((v1 ^ v2) ^ v1)))",
  "obf_leng": 19,
  "result_expr": "((v3 * v4) - v2)",
  "result_leng": 6,
  "success": "yes",
  "time": 0.04,
  "obf_var": 4,
  "result_var": 3
},{
  "obf_expr": "(v4 - (((1 + (1 * 1)) ^ (not (v4) & not (v4))) + ((not (v4) ^ (1 + 1)) + not ((v4 + 1)))))",
  "obf_leng": 30,
  "result_expr": "(v4 - ((2 ^ not (v4)) + ((not (v4) ^ 2) + not ((v4 + 1)))))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.75,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 ++ (1 - 1)) / 1) - ((v0 | 1) + v0))",
  "obf_leng": 15,
  "result_expr": "- (((v0 | 1) + v0))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.04,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v2 + ((v2 * 1) - - (v2))) + v0) + (((v2 + v0) | ((v1 ^ v1) & 1)) * (1 + 1)))",
  "obf_leng": 25,
  "result_expr": "(((v2 + (2 * v2)) + v0) + ((v2 + v0) * 2))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.16,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(v0 - (((v0 ^ v0) & 1) - ((v1 + 1) + 1)))",
  "obf_leng": 15,
  "result_expr": "(v0 + (v1 + 2))",
  "result_leng": 5,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(- ((((v4 & v4) * v0) - ((1 + v2) - (v2 - 1)))) + (1 + 1))",
  "obf_leng": 21,
  "result_expr": "(2 - ((v4 * v0) - ((1 + v2) - (v2 - 1))))",
  "result_leng": 17,
  "success": "yes",
  "time": 0.31,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((1 + 1) & v0) - (((1 + 1) ^ ((v3 ++ v3) / 1)) - (not (v2) & ((v2 & v0) & (v0 & v3)))))",
  "obf_leng": 29,
  "result_expr": "((2 & v0) - ((2 ^ v3) - (not (v2) & ((v2 & v0) & v3))))",
  "result_leng": 19,
  "success": "yes",
  "time": 4.8,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v3 * v3) - (v3 - v3)) & ((v0 * 1) - (v1 * 1)))",
  "obf_leng": 18,
  "result_expr": "((v3 * v3) & (v0 - v1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.46,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((1 + v4) - ((v3 ++ 1) /s - (1))) + (v3 * v4))",
  "obf_leng": 15,
  "result_expr": "(((1 + v4) - ((v3 ++ 1) /s -1)) + (v3 * v4))",
  "result_leng": 15,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 * v4) & (v4 + v4))",
  "obf_leng": 7,
  "result_expr": "((v1 * v4) & (2 * v4))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v2 + ((v0 | v2) - 1))",
  "obf_leng": 8,
  "result_expr": "(v2 + ((v0 | v2) - 1))",
  "result_leng": 8,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((v3 + (1 - not (v3))) + (1 + v3)) + (1 - not (((v3 + 1) + (1 + 1)))))",
  "obf_leng": 25,
  "result_expr": "(((v3 + (1 - not (v3))) + (1 + v3)) + (1 - not ((v3 + 3))))",
  "result_leng": 21,
  "success": "yes",
  "time": 0.14,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((- (v4) + 1) + (1 + 1))",
  "obf_leng": 8,
  "result_expr": "(3 - v4)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.07,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((v1 + (1 + 1)) & ((1 + v0) + not (- (v0))))",
  "obf_leng": 14,
  "result_expr": "((v1 + 2) & ((1 + v0) + not (- (v0))))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 | (v4 | v1)) | ((v3 - v3) & 1))",
  "obf_leng": 12,
  "result_expr": "(v4 | v1)",
  "result_leng": 3,
  "success": "yes",
  "time": 0.03,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((v3 | - (1)) & (1 + ((1 + (1 + 1)) + (v3 ^ v1))))",
  "obf_leng": 16,
  "result_expr": "((v3 ^ v1) + 4)",
  "result_leng": 5,
  "success": "yes",
  "time": 0.47,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 + ((1 | 1) + v2)) ^ ((v3 * v3) | (1 - 1)))",
  "obf_leng": 16,
  "result_expr": "((v2 + 2) ^ (v3 * v3))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.2,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "- ((((v3 ++ (v4 - v4)) /s - (1)) + (((v4 * v4) * 1) + v0)))",
  "obf_leng": 18,
  "result_expr": "- ((((v3 ++ 0) /s -1) + ((v4 * v4) + v0)))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.05,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(- ((1 * v1)) - (- (v1) & - (((v1 * v4) + 1))))",
  "obf_leng": 15,
  "result_expr": "- ((v1 + (- (v1) & not ((v1 * v4)))))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.07,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((((v4 * v2) ^ (1 + 1)) + v3) - v3)",
  "obf_leng": 12,
  "result_expr": "((((v4 * v2) ^ 2) + v3) - v3)",
  "result_leng": 10,
  "success": "yes",
  "time": 0.64,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(1 + ((1 + 1) + (1 - (v4 * v3))))",
  "obf_leng": 12,
  "result_expr": "(4 - (v4 * v3))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.64,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((1 + v0) ^ (1 * (v1 & v0)))",
  "obf_leng": 9,
  "result_expr": "((1 + v0) ^ (v1 & v0))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.04,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(((1 + 1) & not (v4)) + not (((v0 ++ (1 - (v1 ^ v4))) / 1)))",
  "obf_leng": 20,
  "result_expr": "((2 & not (v4)) + not ((1 - (v1 ^ v4))))",
  "result_leng": 14,
  "success": "yes",
  "time": 10.18,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "(((((v3 - v1) & ((1 ++ 1) / 1)) ^ (v1 * v3)) | (v3 - - (v1))) - (1 ^ 1))",
  "obf_leng": 25,
  "result_expr": "((((v3 - v1) & 1) ^ (v1 * v3)) | (v3 + v1))",
  "result_leng": 14,
  "success": "yes",
  "time": 0.24,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(1 + ((1 + v3) + (((1 + v3) + (1 & 1)) + ((1 + 1) + v3))))",
  "obf_leng": 19,
  "result_expr": "(1 + ((1 + v3) + ((v3 + 2) + (2 + v3))))",
  "result_leng": 13,
  "success": "yes",
  "time": 0.12,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "not (((v1 ^ v3) ^ ((v3 - 1) + not (1))))",
  "obf_leng": 14,
  "result_expr": "not (((v1 ^ v3) ^ (v3 + -3)))",
  "result_leng": 10,
  "success": "yes",
  "time": 1.99,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v3 * v3) ^ (- (v4) ^ (v1 ^ v1)))",
  "obf_leng": 10,
  "result_expr": "((v3 * v3) ^ - (v4))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.05,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((1 * (v3 + ((v3 * v3) | (v1 + v1)))) + - (v3))",
  "obf_leng": 14,
  "result_expr": "((v3 + ((v3 * v3) | (2 * v1))) - v3)",
  "result_leng": 12,
  "success": "yes",
  "time": 0.2,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v0 & 1) | (v0 ^ (((1 + 1) + (1 + 1)) * v0)))",
  "obf_leng": 15,
  "result_expr": "((v0 & 1) | (v0 ^ (4 * v0)))",
  "result_leng": 9,
  "success": "yes",
  "time": 0.51,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- (v0) & ((v1 ^ v1) + (v1 + ((v4 * v4) + - (v1)))))",
  "obf_leng": 15,
  "result_expr": "(- (v0) & (v4 * v4))",
  "result_leng": 6,
  "success": "yes",
  "time": 0.15,
  "obf_var": 3,
  "result_var": 2
},{
  "obf_expr": "((1 * (v2 * v1)) & (v3 | v1))",
  "obf_leng": 9,
  "result_expr": "((v2 * v1) & (v3 | v1))",
  "result_leng": 7,
  "success": "yes",
  "time": 0.25,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((v3 ^ v0) - (v0 & (1 + 1)))",
  "obf_leng": 10,
  "result_expr": "((v3 ^ v0) - (v0 & 2))",
  "result_leng": 8,
  "success": "yes",
  "time": 1.81,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "((v1 + ((v1 | v1) | v0)) + v0)",
  "obf_leng": 9,
  "result_expr": "((v1 + (v1 | v0)) + v0)",
  "result_leng": 7,
  "success": "yes",
  "time": 0.03,
  "obf_var": 2,
  "result_var": 2
},{
  "obf_expr": "(v1 + (((- (v1) + 1) + (v1 * - (v2))) + ((1 + v0) * (v0 - 1))))",
  "obf_leng": 20,
  "result_expr": "(v1 + (((1 - v1) - (v1 * v2)) + ((1 + v0) * (v0 - 1))))",
  "result_leng": 20,
  "success": "yes",
  "time": 0.13,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "not (((not ((v0 * v0)) & v0) - ((((v0 ^ 1) + (v0 * v0)) ++ (1 ^ (v0 & 1))) / 1)))",
  "obf_leng": 26,
  "result_expr": "not (((not ((v0 * v0)) & v0) - (1 ^ (v0 & 1))))",
  "result_leng": 16,
  "success": "yes",
  "time": 0.39,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((1 * ((v0 * v0) + (- (v0) - 1))) - 1)",
  "obf_leng": 14,
  "result_expr": "(((v0 * v0) + not (v0)) - 1)",
  "result_leng": 10,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(((v0 + (v0 + v0)) - (v2 * v2)) - ((v1 ^ v0) - v0))",
  "obf_leng": 18,
  "result_expr": "(((v0 + (2 * v0)) - (v2 * v2)) - ((v1 ^ v0) - v0))",
  "result_leng": 18,
  "success": "yes",
  "time": 0.14,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "(((v3 * v3) + v2) + (((not (1) + v0) - v2) + 1))",
  "obf_leng": 16,
  "result_expr": "(((v3 * v3) + v2) + (((-2 + v0) - v2) + 1))",
  "result_leng": 15,
  "success": "yes",
  "time": 0.08,
  "obf_var": 3,
  "result_var": 3
},{
  "obf_expr": "((((v0 - 1) - 1) - 1) - (1 + 1))",
  "obf_leng": 15,
  "result_expr": "(v0 - 5)",
  "result_leng": 4,
  "success": "yes",
  "time": 0.03,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "(- (v3) - not (((v3 * v3) - 1)))",
  "obf_leng": 12,
  "result_expr": "- ((v3 + not (((v3 * v3) - 1))))",
  "result_leng": 11,
  "success": "yes",
  "time": 0.06,
  "obf_var": 1,
  "result_var": 1
},{
  "obf_expr": "((((1 + 1) & (1 + (1 & 1))) ^ v1) + not (((v0 ^ v0) - (v0 + (v0 + 1)))))",
  "obf_leng": 24,
  "result_expr": "((2 ^ v1) + not (- ((v0 + (v0 + 1)))))",
  "result_leng": 12,
  "success": "yes",
  "time": 0.16,
  "obf_var": 2,
  "result_var": 2
}
]